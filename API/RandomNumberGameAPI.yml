openapi: 3.0.0
info:
  title: Random Number Game API
  version: 1.0.0
  description: API for playing games and managing bets

servers:
  - url: localhost:8080/api/v1

paths:
  /players:
    post:
      summary: Register a new player
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerDTO'
      responses:
        '200':
          description: Successful registration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerDTO'

  /players/{playerId}/wallet-transactions:
    get:
      summary: Get wallet transactions by player
      parameters:
        - name: playerId
          in: path
          description: The ID of the player
          required: true
          schema:
            type: integer
        - name: page
          in: query
          description: Page number 
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: Page size 
          required: false
          schema:
            type: integer
            default: 10
        - name: startDate
          in: query
          description: Start date for filtering transactions (ISO Date format)
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: End date for filtering transactions (ISO Date format)
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WalletTransactionDTO'

  /players/{playerId}/bets:
    get:
      summary: Get bets by player
      parameters:
        - name: playerId
          in: path
          description: The ID of the player
          required: true
          schema:
            type: integer
        - name: page
          in: query
          description: Page number 
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: Page size
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BetDTO'

  /games/{playMode}/play:
    post:
      summary: Play a game
      description: Endpoint for playing a game based on provided bets and play mode selected
      parameters:
        - name: playMode
          in: path
          description: The mode of the game
          required: true
          schema:
            type: string
            enum:
              - standard
      requestBody:
        description: List of bets to play
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Bet'
            examples:
              uniqueBet:
                value:
                  - playerId: 1
                    betAmount: 10.0
                    selectedNumber: 7
              multipleBets:
                value:
                  - playerId: 1
                    betAmount: 10.0
                    selectedNumber: 7
                  - playerId: 2
                    betAmount: 20.0
                    selectedNumber: 3
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BetDTO'
              examples:
                uniqueBet:
                  value:
                    - playerId: 1
                      betAmount: 10.0
                      selectedNumber: 7          
                      generatedNumber: 7         
                      result: WIN         
                      multiplier: 10.0         
                      winnings: 100.0         
                      timestamp: "2024-02-04T19:20:14.5195193"
                multipleBets:
                  value:
                    - playerId: 1
                      betAmount: 10.0
                      selectedNumber: 7          
                      generatedNumber: 7         
                      result: WIN         
                      multiplier: 10.0         
                      winnings: 100.0         
                      timestamp: "2024-02-04T19:20:14.5195193"
                    - playerId: 2
                      betAmount: 20.0
                      selectedNumber: 3          
                      generatedNumber: 7         
                      result: LOSE         
                      multiplier: 0.0
                      winnings: 0.0        
                      timestamp: "2024-02-04T19:20:14.5195193"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                timestamp: "2024-02-04T19:20:14.5195193"
                status: 400
                error: "Bad Request"
                message: "Invalid input. Please check the request payload."
                path: "/games/{playMode}/play"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                timestamp: "2024-02-04T19:20:14.5195193"
                status: 500
                error: "Internal Server Error"
                message: "No static resource players/1/bets."
                path: "/api/v1/players/1/bets"

  /leaderboards:
    get:
      summary: Get Leaderboard
      description: Retrieve the leaderboard based on play mode
      parameters:
        - name: playMode
          in: query
          description: The mode of the game
          required: true
          schema:
            $ref: '#/components/schemas/PlayMode'
        - name: page
          in: query
          description: The mode of the game
          required: true
          schema:
            type: integer
        - name: size
          in: query
          description: The mode of the game
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardDTO'
              example:
                playMode: "standard"
                leaderBoardItems: 
                  - rank: "1"
                    username: "MarkBolt"
                    totalWinnings: "10"
                  - rank: "2"
                    username: "MarthaScheninder"
                    totalWinnings: "10"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                timestamp: "2024-02-04T19:20:14.5195193"
                status: 400
                error: "Bad Request"
                message: "Invalid input. Please check the request payload."
                path: "/games/{playMode}/play"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                timestamp: "2024-02-04T19:20:14.5195193"
                status: 500
                error: "Internal Server Error"
                message: "No static resource players/1/bets."
                path: "/api/v1/players/1/bets"

components:
  schemas:
    BetDTO:
      type: object
      properties:
        playerId:
          type: integer
          format: int64
        betAmount:
          type: number
          format: double
        selectedNumber:
          type: integer
        generatedNumber:
          type: integer
        result:
          $ref: '#/components/schemas/BetResults'
        multiplier:
          type: number
          format: double
        winnings:
          type: number
          format: double
        timestamp:
          type: string
          format: date-time
    
    Bet:
      type: object
      properties:
        playerId:
          type: integer
          format: int64
        betAmount:
          type: number
          format: double
        selectedNumber:
          type: integer

    BetResults:
      type: string
      enum:
        - WIN
        - LOSE

    PlayMode:
      type: string
      enum:
        - standard

    Error:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time    
        status:
          type: string
        error:
          type: string         
        message:
          type: string  
        path:
          type: string  

    LeaderboardDTO:
      type: object
      properties:
        playMode:
          type: string
          description: The play mode
        leaderBoardItems:
          type: array
          items:
            $ref: '#/components/schemas/LeaderboardItemDTO'

    LeaderboardItemDTO:
      type: object
      properties:
        rank:
          type: integer
          description: The rank of the player
        username:
          type: string
          description: The username of the player
        totalWinnings:
          type: integer
          description: The total winnings of the player

    PlayerDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        surname:
          type: string
        username:
          type: string

    WalletTransactionDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        transactionType:
          type: string
          enum:
            - BET
          default: BET
        playerId:
          type: integer
          format: int64
        amount:
          type: number
          format: double
        walletBalance:
          type: number
          format: double
        timestamp:
          type: string
          format: date-time

  
